"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _FfxMode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _FfxModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FfxMode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    FF1: _FfxMode.ValueType  # 0
    FF3: _FfxMode.ValueType  # 1
    """FF3 is deprecated (use FF31 instead)"""
    FF31: _FfxMode.ValueType  # 2
    """FF3-1"""

class FfxMode(_FfxMode, metaclass=_FfxModeEnumTypeWrapper):
    """FfxMode refers to the algorithm used for encrypting the data.
    https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-38Gr1-draft.pdf
    """

FF1: FfxMode.ValueType  # 0
FF3: FfxMode.ValueType  # 1
"""FF3 is deprecated (use FF31 instead)"""
FF31: FfxMode.ValueType  # 2
"""FF3-1"""
global___FfxMode = FfxMode

@typing_extensions.final
class FpeFfxKeyParams(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_SIZE_FIELD_NUMBER: builtins.int
    MODE_FIELD_NUMBER: builtins.int
    ALPHABET_FIELD_NUMBER: builtins.int
    key_size: builtins.int
    """key size in bits. Supported values: 128, 192 or 256"""
    mode: global___FfxMode.ValueType
    alphabet: builtins.str
    def __init__(
        self,
        *,
        key_size: builtins.int = ...,
        mode: global___FfxMode.ValueType = ...,
        alphabet: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alphabet", b"alphabet", "key_size", b"key_size", "mode", b"mode"]) -> None: ...

global___FpeFfxKeyParams = FpeFfxKeyParams

@typing_extensions.final
class FpeFfxKeyFormat(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VERSION_FIELD_NUMBER: builtins.int
    KEY_SIZE_FIELD_NUMBER: builtins.int
    PARAMS_FIELD_NUMBER: builtins.int
    version: builtins.int
    key_size: builtins.int
    """key size in bits. Supported values: 128, 192 or 256"""
    @property
    def params(self) -> global___FpeFfxKeyParams: ...
    def __init__(
        self,
        *,
        version: builtins.int = ...,
        key_size: builtins.int = ...,
        params: global___FpeFfxKeyParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["params", b"params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key_size", b"key_size", "params", b"params", "version", b"version"]) -> None: ...

global___FpeFfxKeyFormat = FpeFfxKeyFormat

@typing_extensions.final
class FpeFfxKey(google.protobuf.message.Message):
    """key_type: type.googleapis.com/ssb.crypto.tink.FpeFfxKey"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VERSION_FIELD_NUMBER: builtins.int
    KEY_VALUE_FIELD_NUMBER: builtins.int
    PARAMS_FIELD_NUMBER: builtins.int
    version: builtins.int
    key_value: builtins.bytes
    @property
    def params(self) -> global___FpeFfxKeyParams: ...
    def __init__(
        self,
        *,
        version: builtins.int = ...,
        key_value: builtins.bytes = ...,
        params: global___FpeFfxKeyParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["params", b"params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key_value", b"key_value", "params", b"params", "version", b"version"]) -> None: ...

global___FpeFfxKey = FpeFfxKey
